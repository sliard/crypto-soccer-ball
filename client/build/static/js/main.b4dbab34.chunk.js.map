{"version":3,"sources":["getWeb3.js","App.js","serviceWorker.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","App","state","storageValue","accounts","contract","componentDidMount","eth","getAccounts","defaultAccount","net","getId","networkId","deployedNetwork","CryptoSoccerBall","networks","instance","Contract","abi","address","myApp","selectedAccount","events","Transfer","filter","to","fromBlock","error","event","on","subscriptionId","methods","tokensOfOwner","call","from","then","result","setState","allTokenOwn","initData","alert","getMasterOwnerBallOf","ballId","canCreateBall","catch","err","message","getReferee","referee","ownerOf","masterOwnerOf","mint","createSoccerBall","send","offer","dest","offerBall","burn","exists","steal","stealId","getMinStealDelay","minStealDelay","getLastShootOf","lastShoot","stealAfter","timeNow","Date","getTime","d","setTime","toDateString","toLocaleTimeString","stealBall","shoot","shootTo","soccerball","margin","midbutton","this","className","id","onSubmit","preventDefault","type","value","style","target","placeholder","role","href","undefined","map","currentBallId","i","key","src","length","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b4dbab34.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React, { Component } from \"react\";\nimport CryptoSoccerBall from \"./contracts/CryptoSoccerBall.json\";\nimport getWeb3 from \"./getWeb3\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = { storageValue: 0, web3: null, accounts: null, contract: null };\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n      web3.eth.defaultAccount = web3.eth.accounts[0];\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = CryptoSoccerBall.networks[networkId];\n      const instance = new web3.eth.Contract(\n        CryptoSoccerBall.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      const myApp = this;\n      const selectedAccount = accounts[0];\n\n      instance.events.Transfer({\n        filter: {to: selectedAccount},\n        fromBlock: 0\n      }, function(error, event){ console.log(\"Transfer event !\", event); })\n        .on(\"connected\", function(subscriptionId){\n          console.log(\"event connected \", subscriptionId);\n        })\n        .on('data', function(event){\n          instance.methods.tokensOfOwner(selectedAccount).call({ from: selectedAccount }).then(result => {\n            myApp.setState({ allTokenOwn: result });\n          });\n        });\n      instance.events.Transfer({\n        filter: {from:selectedAccount},\n        fromBlock: 0\n      }, function(error, event){ console.log(\"Transfer event !\", event); })\n        .on(\"connected\", function(subscriptionId){\n          console.log(\"event connected \", subscriptionId);\n        })\n        .on('data', function(event){\n          instance.methods.tokensOfOwner(selectedAccount).call({ from: selectedAccount }).then(result => {\n            myApp.setState({ allTokenOwn: result });\n          });\n        });\n  \n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, selectedAccount, contract: instance }, this.initData);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Install MetaMask extension.`,\n      );\n      console.error(error);\n    }\n  };\n\n  initData = async () => {\n    const { selectedAccount, contract } = this.state;\n\n    // Get my ball id if I'm a master owner.\n    const ballId = await contract.methods.getMasterOwnerBallOf(selectedAccount).call({ from: selectedAccount });\n    console.log(\"master ball ID : \", ballId);\n    \n    const canCreateBall = (ballId == 0) || await contract.methods.canCreateBall(selectedAccount).call({ from: selectedAccount });\n    console.log(\"canCreateBall : \", canCreateBall);\n\n    contract.methods.canCreateBall(selectedAccount).call({ from: selectedAccount }).then(result => {console.log(\"canCreateBall then\", result)}).catch((err) => {\n      alert(err.message);\n    });\n\n    const referee = await contract.methods.getReferee().call({ from: selectedAccount });\n    console.log(\"referee : \", referee);\n\n    const allTokenOwn = await contract.methods.tokensOfOwner(selectedAccount).call({ from: selectedAccount });\n    console.log(\"allTokenOwn : \", allTokenOwn);\n\n    if (ballId > 0) {\n      const ownerOf = await contract.methods.ownerOf(ballId).call({ from: selectedAccount });\n      console.log(\"ownerOf : \", ownerOf);\n  \n      const masterOwnerOf = await contract.methods.masterOwnerOf(ballId).call({ from: selectedAccount });\n      console.log(\"masterOwnerOf : \", masterOwnerOf);\n  \n    }\n    \n\n    /*\n    // Get the value from the contract to prove it worked.\n    const response = await contract.methods.get().call();\n*/\n    // Update state with the result.\n    this.setState({ ballId: ballId, canCreateBall: canCreateBall, referee: referee, allTokenOwn: allTokenOwn });\n  };\n\n  mint = () => {\n    this.state.contract.methods.createSoccerBall().send({ from: this.state.selectedAccount }).then((result) => {\n      this.state.contract.methods.getMasterOwnerBallOf(this.state.selectedAccount).call({ from: this.state.selectedAccount }).then( ballId => this.setState({ ballId: ballId}));\n      this.setState({ canCreateBall: false});\n    }).catch((err) => {\n      alert(err.message);\n    });\n  }\n\n\n  offer = async (dest) => {\n    const { selectedAccount, contract } = this.state;\n    \n    const ballId = await contract.methods.getMasterOwnerBallOf(dest).call({ from: selectedAccount });\n    if(ballId > 0) {\n      alert(\"User is already the masterOwner of soccer ball : \" + ballId);\n      return;\n    }\n\n    contract.methods.offerBall(dest, this.state.ballId).send({ from: selectedAccount }).then((result) => {\n      this.setState({ ballId: 0});\n      console.log(\"offer Ok\");\n    }).catch((err) => {\n      alert(err.message);\n    });\n  }\n\n  burn = async (ballId) => {\n    const { selectedAccount, contract } = this.state;\n\n    const tokenExists = await contract.methods.exists(ballId).call({ from: selectedAccount });\n    if(!tokenExists) {\n      alert(\"Ball \" + ballId + \" don't exist\");\n      return;\n    }\n\n    const masterOwnerOf = await contract.methods.masterOwnerOf(ballId).call({ from: selectedAccount });\n    console.log(\"masterOwnerOf : \" + masterOwnerOf);\n    if (masterOwnerOf != this.state.selectedAccount) {\n      alert(\"Your ar not the master owner of ball : \" + ballId);\n      return;\n    }\n\n    this.state.contract.methods.burn(this.state.ballId).send({ from: this.state.selectedAccount }).then((result) => {\n      this.setState({ ballId: 0});\n      console.log(\"offer Ok\");\n    }).catch((err) => {\n      alert(err.message);\n    });\n  }\n\n  steal = async (stealId) => {\n    const { selectedAccount, contract } = this.state;\n\n    const tokenExists = await contract.methods.exists(stealId).call({ from: selectedAccount });\n    if(!tokenExists) {\n      alert(\"Ball \" + stealId + \" don't exist\");\n      return;\n    }\n    \n    const minStealDelay = await contract.methods.getMinStealDelay().call({ from: selectedAccount });\n    console.log(\"minStealDelay : \" + minStealDelay);\n\n    const lastShoot = await contract.methods.getLastShootOf(stealId).call({ from: selectedAccount });\n    console.log(\"lastShoot : \" + lastShoot);\n\n    const stealAfter = await contract.methods.stealAfter(stealId).call({ from: selectedAccount });\n    console.log(\"stealAfter : \" + stealAfter);\n\n    const timeNow = (new Date()).getTime()/1000;\n\n    if(stealAfter == 0) {\n      alert(\"Ball \" + stealId + \" can't be stolen at all\");\n      return;\n    }\n    if(timeNow - stealAfter < 0) {\n      var d = new Date();\n      d.setTime(stealAfter*1000);\n      alert(\"Ball \" + stealId + \" can't be stolen before : \" + d.toDateString() + \" - \" + d.toLocaleTimeString());\n      return;\n    }\n    console.log(\"stealAfter : \" + stealAfter);\n\n    contract.methods.stealBall(stealId).send({ from: selectedAccount }).then((result) => {\n      console.log(\"steal Ok\");\n      contract.methods.tokensOfOwner(selectedAccount).call({ from: selectedAccount }).then((result) => {\n        this.setState({ allTokenOwn: result });\n      });\n    }).catch((err) => {\n      alert(err.message);\n    });\n\n\n  }\n\n  shoot = (to, ballId) => {\n    const { selectedAccount, contract } = this.state;\n\n    contract.methods.shootTo(to, ballId).send({ from: selectedAccount }).then((result) => {\n      console.log(\"shoot Ok\");\n      contract.methods.tokensOfOwner(selectedAccount).call({ from: selectedAccount }).then((result) => {\n        this.setState({ allTokenOwn: result });\n      });\n    }).catch((err) => {\n      alert(err.message);\n    });\n  }\n\n\n  render() {\n\n    const soccerball = {\n      margin: '10px',\n      'maxWidth': '150px',\n    };\n\n    const midbutton = {\n      margin: 'auto',\n      'maxWidth': '150px',\n    };\n\n    const midTextInput = {\n      margin: 'auto',\n      'maxWidth': '450px',\n    };\n\n\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract... Install MetaMask extension !</div>;\n    }\n    return (\n      <div>\n          <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark p-0\">\n            <div className=\"container-fluid\">\n              <div className=\"navbar-brand\">Crypto Soccer Ball</div>\n              <ul className=\"navbar-nav px-3\">\n                <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n                  <small className=\"text-white\"><span id=\"account\">{this.state.selectedAccount}</span></small>\n                </li>\n              </ul>\n            </div>\n          </nav>\n\n          <section className=\"highlight-clean mt-5\">\n            <div className=\"container\">\n                <div className=\"intro\">\n                    <h1 className=\"text-center\">Crypto soccer ball Game</h1>\n                    <p className=\"text-center\">3 game roles :\n                    <br/><b>Referee</b> : Person who create the game\n                    <br/><b>MasterOwner</b> : Soccer ball Owner\n                    <br/><b>Holder</b> : Person that hold the soccer ball (token owner)<br/></p>\n                </div>\n                {this.state.canCreateBall &&\n                <div className=\"content mr-auto ml-auto\">\n                <form onSubmit={(event) => {\n                  event.preventDefault()\n                  this.mint()\n                }}>\n                  <p className=\"text-center\">Anybody can create one and only one soccer ball</p>\n                  <input\n                    type='submit'\n                    className='btn btn-block btn-primary'\n                    value='Create One'\n                    style={midbutton}\n                  />\n                </form>\n                </div>\n                }\n                {!this.state.canCreateBall &&\n                <p className=\"text-center\">You already create one soccer ball</p>\n                }\n\n\n                <div className=\"mb-3\">\n\n                {this.state.ballId > 0 &&\n\n                  <div className=\"content mr-auto ml-auto text-center\">\n                  <h3>You are the masterOwner of the ball : #{this.state.ballId}</h3>\n                  <p>A masterOwner can offer the ball to anybody that is not already a masterOwner of an another ball.</p>\n                  <form onSubmit={(event) => {\n                    event.preventDefault()\n                    this.offer(event.target.dest.value)\n                    event.target.dest.value = \"\";\n                  }}>\n                    <input\n                        type='text'\n                        className='form-control mb-1'\n                        placeholder='e.g. 0x00000'\n                        id='dest'\n                        style={midTextInput}\n                      />\n                    <input\n                      type='submit'\n                      className='btn btn-block btn-primary'\n                      value='Offer'\n                      style={midbutton}\n                    />\n                  </form>\n\n                  </div>\n                }\n                </div>\n\n                <div className=\"d-none buttons\">\n                    <p>You are the masterOwner of the ball :<br/>A masterOwner can offer the ball to anybody that is not already a masterOwner of an another ball.<br/></p>\n                    <form>\n                        <div className=\"form-group\"><label>Recipient</label><input className=\"form-control\" type=\"text\"/></div>\n                        <div className=\"form-group\"><button className=\"btn btn-primary\" type=\"button\">Offer</button></div>\n                    </form>\n                    <p>Only the masterOwner of the ball can burn it<br/></p><a className=\"btn btn-primary\" role=\"button\" href=\"#\">Burn it</a>\n                </div>\n            </div>\n          </section>\n\n          <section>\n            <div className=\"container mt-5\">\n            <p>Soccer ball you hold :</p>\n                <div className=\"row\">\n                {this.state.allTokenOwn != undefined && this.state.allTokenOwn.map((currentBallId, i) => {    \n                   return (\n                    <div key={currentBallId} className=\"col-sm-6 col-md-3 col-lg-3 text-center\"><img className=\"img-fluid\" style={soccerball} src=\"https://ipfs.io/ipfs/QmauiCZRfq8vmG3wSKcYNyJ8ZRLAM87KUoHGkj6VZmbzGa\"/>\n                      <p>id : {currentBallId}</p>\n                    </div>\n                   ) \n                })}\n                { (this.state.allTokenOwn == undefined || this.state.allTokenOwn.length == 0) &&\n                  <div className=\"col\">none</div>\n                }\n                </div>\n            </div>\n          </section>\n\n          <section className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6\">\n                    <h3>Shoot !</h3>\n                    <p>Only the referee, the masterOwner and the holder of the ball can shoot into a soccer ball to send it to anybody.<br/></p>\n                    <form onSubmit={(event) => {\n                      event.preventDefault()\n                      this.shoot(event.target.dest.value, event.target.ballId.value)\n                      event.target.dest.value = \"\";\n                      event.target.ballId.value = \"\";\n                    }}>\n                        <div className=\"form-group\"><label>Ball Id</label><input id='ballId' className=\"form-control\" type=\"text\"/></div>\n                        <div className=\"form-group\"><label>Recipient</label><input id='dest' className=\"form-control\" type=\"text\" placeholder=\"Address 0x00...\"/></div>\n                        <div className=\"form-group\"><input className=\"btn btn-primary\" type=\"submit\" value='Shoot'/></div>\n                    </form>\n                </div>\n                <div className=\"col col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6\">\n                    <h3>Steal a Soccer ball</h3>\n                    <p>Anybody can steal a ball except if the ball have move less than 2 hours before or if the ball is hold by the referee or by the masterOwner.<br/></p>\n                    <form onSubmit={(event) => {\n                      event.preventDefault()\n                      this.steal(event.target.stealId.value);\n                      event.target.stealId.value = \"\";\n                    }}>\n                        <div className=\"form-group\"><label>Ball Id</label><input id='stealId' className=\"form-control\" type=\"text\"/></div>\n                        <div className=\"form-group\"><input className=\"btn btn-primary\" type=\"submit\" value='Steal'/></div>\n                    </form>\n                </div>\n            </div>\n          </section>\n          <footer className=\"footer-basic\">\n            <div className=\"social\">\n              <a href=\"#\"><i className=\"icon ion-social-github\"></i></a>\n              <a href=\"#\"><i className=\"icon ion-social-twitter\"></i></a>\n            </div>\n          </footer>\n      </div>\n    );\n  }\n\n\n\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}